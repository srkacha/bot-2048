#############################################################################
# Generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#  Dec 16, 2018 09:18:11 PM CET  platform: Windows NT
set vTcl(timestamp) ""


if {!$vTcl(borrow)} {

set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #ececec
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(active_menu_fg) #000000
}

#############################################################################
# vTcl Code to Load User Fonts

vTcl:font:add_font \
    "-family Arial -size 14 -weight normal -slant roman -underline 0 -overstrike 0" \
    user \
    vTcl:font11
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top42
    global vTcl
    set base $vTcl(btop)
    if {$base == ""} {
        set base .top42
    }
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top42 {base} {
    if {$base == ""} {
        set base .top42
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background {#fff} -highlightbackground {#d9d9d9} \
        -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 450x220+578+244
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1924 1050
    wm minsize $top 176 1
    wm overrideredirect $top 0
    wm resizable $top 0 0
    wm deiconify $top
    wm title $top "2048 Bot"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    label $top.lab43 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#fff} -disabledforeground {#a3a3a3} -font Arial \
        -foreground {#000000} -highlightbackground {#d9d9d9} \
        -highlightcolor black -text {Game dimension:} 
    vTcl:DefineAlias "$top.lab43" "Label1" vTcl:WidgetProc "Toplevel1" 1
    ttk::combobox $top.tCo44 \
        -values {4x4 5x5 8x8} -font TkTextFont -state readonly \
        -textvariable combobox -foreground {} -background {} -takefocus {} 
    vTcl:DefineAlias "$top.tCo44" "dimensionCombo" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab45 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#fff} -disabledforeground {#a3a3a3} -font Arial \
        -foreground {#000000} -highlightbackground {#d9d9d9} \
        -highlightcolor black -text Algorithm: 
    vTcl:DefineAlias "$top.lab45" "Label2" vTcl:WidgetProc "Toplevel1" 1
    ttk::combobox $top.tCo46 \
        -values {Random Greedy {Monotonic Decreasing} Expectimax} \
        -font TkTextFont -state readonly -textvariable combobox \
        -foreground {} -background {} -takefocus {} 
    vTcl:DefineAlias "$top.tCo46" "algCombo" vTcl:WidgetProc "Toplevel1" 1
    button $top.but47 \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#005b96} -disabledforeground {#a3a3a3} -font Arial \
        -foreground {#fff} -highlightbackground {#005b96} \
        -highlightcolor black -pady 0 -text Start 
    vTcl:DefineAlias "$top.but47" "startButton" vTcl:WidgetProc "Toplevel1" 1
    button $top.but42 \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#ff6f69} -disabledforeground {#a3a3a3} \
        -font TkDefaultFont -foreground {#fff} -highlightbackground {#d9d9d9} \
        -highlightcolor black -pady 0 -text Stop 
    vTcl:DefineAlias "$top.but42" "stopButton" vTcl:WidgetProc "Toplevel1" 1
    labelframe $top.lab46 \
        -font Arial -foreground black -text Status -background {#fff} \
        -height 85 -width 230 
    vTcl:DefineAlias "$top.lab46" "Labelframe1" vTcl:WidgetProc "Toplevel1" 1
    set site_3_0 $top.lab46
    label $site_3_0.lab47 \
        -background {#fff} -disabledforeground {#a3a3a3} \
        -font $::vTcl(fonts,vTcl:font11,object) -foreground {#000000} \
        -text STOPPED 
    vTcl:DefineAlias "$site_3_0.lab47" "statusLabel" vTcl:WidgetProc "Toplevel1" 1
    place $site_3_0.lab47 \
        -in $site_3_0 -x 10 -y 30 -anchor nw -bordermode ignore 
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.lab43 \
        -in $top -x 10 -y 10 -anchor nw -bordermode ignore 
    place $top.tCo44 \
        -in $top -x 190 -y 10 -anchor nw -bordermode ignore 
    place $top.lab45 \
        -in $top -x 10 -y 60 -anchor nw -bordermode ignore 
    place $top.tCo46 \
        -in $top -x 190 -y 60 -anchor nw -bordermode ignore 
    place $top.but47 \
        -in $top -x 270 -y 110 -width 150 -relwidth 0 -anchor nw \
        -bordermode ignore 
    place $top.but42 \
        -in $top -x 270 -y 160 -width 150 -relwidth 0 -anchor nw \
        -bordermode ignore 
    place $top.lab46 \
        -in $top -x 10 -y 110 -width 230 -relwidth 0 -height 85 -relheight 0 \
        -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top42 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

